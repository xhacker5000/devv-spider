{
    "projectId": "emkcwu758v0g",
    "name": "Refactor Content Hub",
    "uid": "d738ornlxcsg",
    "type": "frontend",
    "parentId": "",
    "deployedVersionId": "emkdow8l648w",
    "createdTime": 1747840084,
    "domain": "https://emkcwu758v0g.devv.app",
    "threadId": "emkcxbuqwk5c",
    "extra": {
        "vercelProjectId": "prj_dVViBOtJzlNfeClAA9VkF0j0Kci3",
        "codeVersionId": "emkdow8l648w"
    },
    "files": [
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": ".devv/ARCHITECTURE.md",
            "content": "# Blog Homepage Design\n\n## Design Direction\n- **Style**: Minimalist with bold accents, ample whitespace\n- **Visual Theme**: Modern with glassmorphism effects, subtle animations, gradient overlays\n- **Typography**: Clean sans-serif with hierarchy and visual contrast\n- **Colors**: Uses shadcn/ui theme system with primary/accent colors and dark mode support\n\n## Layout Components\n\n### Header\n- Clean navigation with brand logo\n- Light/dark mode toggle\n- Authentication links\n- Responsive mobile menu\n\n### Hero Section\n- Full-width gradient background with subtle blur effects\n- Dynamic animated background elements with pulse animations\n- Bold headline with gradient text accents\n- Clear call-to-action buttons with hover effects\n\n### Categories Section\n- Interactive card grid layout\n- Each category with icon and description\n- Hover effects with translate and shadow transitions\n- Responsive grid that adapts to different screen sizes\n\n### Latest Articles Section\n- Modern card-based layout with hover animations\n- Featured article (first) with larger display on desktop\n- Clean metadata display (author, reading time)\n- Image thumbnails with smooth scale transitions\n- Category badges with translucent backdrop filters\n\n### Trending Topics Section\n- Horizontal tag list with visual hierarchy\n- Trending topics highlighted with icons\n- Clean button-based design for topic navigation\n\n### Membership CTA\n- Split design with content and visual elements\n- Gradient background with testimonial\n- Benefits displayed as icon list\n- Strong visual call-to-action\n\n### Footer\n- Multi-column layout with site sections\n- Category links mirroring main navigation\n- Copyright and brand information\n- Clean, accessible text with hover states\n\n## Core Features\n- Modern design language with glassmorphism and gradient effects\n- Smooth hover animations and transitions\n- Loading state management with skeleton screens\n- Fully responsive design adapting to all screen sizes\n- Light and dark theme support\n- Accessible navigation and content structures",
            "createdTime": 1747840155
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": ".devv/PROJECT_PROMPTS.md",
            "content": "# React + Vite Frontend Project Technical Architecture Documentation\n\n\u003cproject_overview\u003e\n## Project Overview\n\nThis is a pure frontend project based on React + Vite, using TypeScript for type safety. The project adopts Tailwind CSS as the styling solution, integrating shadcn/ui component library and Lucide icon library. The project uses React Router for frontend routing management, with all route configurations done on the client side. The current task is to iterate on the existing project.\n\n\u003e When generating for the first time, replace the original homepage template code with new content and use it as the project entry point.\n\u003c/project_overview\u003e\n\n\u003ctech_stack\u003e\n## Core Technology Stack ⚠️**Important: Do not modify the following versions and follow their best practices**\n\n```\nFrontend Framework:\n- React 18.2.0\n- Vite 6.3.1\n- TypeScript 5.7.2\n- React Router 7.5.1\n\nStyling Solution:\n- Tailwind CSS 3.4.1\n- shadcn/ui (based on Radix UI)\n- Lucide React 0.503.0 (icon library)\n\nDevelopment Tools:\n- ESLint 9.22.0\n- TypeScript ESLint 8.26.1\n```\n\u003c/tech_stack\u003e\n\n\u003cconfiguration\u003e\n## Configuration Instructions\n\n- shadcn/ui and Tailwind CSS are pre-configured, do not make destructive changes to related files\n- All shadcn/ui components are loaded into the `src/components/ui` folder and can be used directly\n- The basic route structure is configured in `src/App.tsx`, add new routes in the correct format\n- The `@/` path alias is configured and can be used directly\n- Theme-related components and utilities are pre-configured:\n  - `ThemeProvider`: Already configured in `App.tsx`, supports theme switching\n  - `ModeToggle`: Lightweight theme toggle button component that can be integrated directly into the interface\n  - `Toaster` and `useToast`: For displaying notifications, usage example:\n  ```tsx\n  import { useToast } from \"@/hooks/use-toast\"\n  \n  // Use within component\n  const { toast } = useToast()\n  toast({ title: \"Notification Title\", description: \"Notification description content\" })\n  ```\n- External packages can be used, but verify their compatibility and correct usage before implementation, **and update** `package.json` accordingly\n- **Important**: Project files may contain critical comments, strictly follow these comment instructions and do not violate them for any reason\n- **⚠️ Warning**: Never delete the `\u003cscript src=\"https://static.devv.ai/devv-app.js\" type=\"module\"\u003e\u003c/script\u003e` reference in `index.html`, otherwise advanced features like element editing will not work properly\n\u003c/configuration\u003e\n\n\u003cdevelopment_principles\u003e\n## Important Development Principles\n\n1. **Development Process Priorities**\n- UI is the most important user experience:\n  - Prioritize designing and implementing beautiful page interfaces\n  - Ensure visual effects are attractive and meet user expectations\n  - Establish suitable color schemes and UI design styles based on user needs and tech stack\n  - Use mock data to complete the full interface when data is needed\n  - Ensure the interface is complete and visually appealing before proceeding with other development\n\n2. **Code Organization Principles**\n- Early Planning:\n  - Clearly define component responsibility boundaries\n  - Identify reusable component scenarios\n  - Plan external packages in advance\n- Code Splitting: **(Important)**\n  - Properly split components and hooks to avoid large files\n  - For routes not yet implemented, create placeholder components with basic structure and TODO comments\n  - ⚠️ **Important**: Split components when they become too large or handle multiple responsibilities\n\n3. **Resource and Variable Validation** ⚠️ **IMPORTANT**\n- Never use non-existent components, properties, or icons (such as Lucide icons or UI components)\n- Always verify the existence of any resource or variable before referencing it to prevent build or deployment failures\n- For external resources like Lucide icons, use the **web_search** tool to confirm their existence before using\n\u003c/development_principles\u003e\n\n\u003cbest_practices\u003e\n## Development Standards and Best Practices\n\n1. **File Organization**\n- All component files should use the `.tsx` extension\n- Route page components should be placed in the `src/pages` directory\n- State management code should be placed in the `src/store` directory\n- For routes not yet implemented, create placeholder components with basic structure and TODO comments\n- Update the title and other metadata in `index.html` after completing the project design\n\n2. **API Request Standards**\n- Consistently use fetch for network requests\n- All requests must include:\n  - Loading state handling\n  - Error handling mechanisms\n  - User-friendly UI feedback (such as loading animations, error messages)\n- API-related code should be centrally managed in the `src/api` directory\n\n3. **State Management**\n- Use React's built-in hooks for simple component states\n- Use `zustand` for complex or shared states:\n  - Place related code in the `store` folder\n  - Split store files by functional modules\n  - Export unified operation methods\n\n4. **Content Modification Principles** **(Important)**\n- When making comprehensive modifications:\n  - Focus only on modifying the target content\n  - Do not modify or delete existing logic unrelated to the target content\n  - Maintain the integrity and independence of existing functionality\n\u003c/best_practices\u003e\n\n\u003ctheme_and_components\u003e\n## Theme and Component Management\n\n1. **Theme System**\n- **Color Scheme Implementation**:\n  - The project uses CSS variables to implement themes, with a complete set of color variables defined in `src/index.css`\n  - Use Tailwind CSS class names (such as `bg-background`, `text-foreground`) to apply these variables\n  - When modifying themes, only update the CSS variable values in `src/index.css`, keeping the variable structure unchanged\n- **Usage Guidelines**:\n  - Always use semantic Tailwind class names (such as `bg-primary`, `text-muted-foreground`), avoid hardcoding color values\n  - Follow background/foreground naming conventions: component backgrounds use `bg-{name}`, text colors use `text-{name}-foreground`\n  - The project has a built-in complete theme color system, usually no need to add custom colors\n  - If you do need to add new color variables, update both light and dark themes\n  - **Strictly prohibited**: Using inline styles or CSS-in-JS solutions\n\n2. **Component Usage Guidelines**\n- shadcn/ui components are pre-installed in the `src/components/ui` directory\n- Check the `src/components/ui` directory before using components\n- Check the specific component file to ensure correct use of internal properties\n- Prioritize using shadcn/ui components to avoid reinventing the wheel\n\n3. **Custom Component Guidelines**\n- Use PascalCase for component naming\n- Strictly follow the single responsibility principle\n- Use TypeScript interfaces to define Props\n- The `components/ui` directory is reserved exclusively for shadcn/ui components. Do not place any custom components here to keep the codebase clean and organized\n- Custom components should be organized in the appropriate folders under the `components` directory based on functional modules\n\u003c/theme_and_components\u003e\n\n\u003cui_ux_guidelines\u003e\n# UI/UX Guidelines\n1. **User-Centricity \u0026 Empathy**:\n- Deep User Journey Understanding: Before any modifications, prioritize understanding users' core needs, usage scenarios, and potential pain points.\n- Simplification \u0026 Intuitiveness: Strive to simplify complex processes, create clear and intuitive interaction paths, and reduce cognitive load.\n- Accessibility(**IMPORTANT**): Consider basic Web Accessibility standards (such as WCAG AA level) by default, ensuring content is available to a wider audience (e.g., sufficient color contrast, keyboard navigation support, clear labels).\n  - Light/Dark Theme Adaptation: Ensure interface elements maintain equal usability and visual appeal in both light and dark theme modes.\n  - State Visibility: Maintain clear visibility of text and controls across all interaction states (default, hover, focus, active, disabled, etc.).\n  - Text on Image Backgrounds: When placing text over image backgrounds, use semi-transparent overlay techniques to improve readability, with recommended opacity ranges of 30%-70%.\n\n2. **Visual Aesthetics \u0026 Brand Consistency**:\n- Pursuit of \"Beauty\" and \"Delight\": Aim to create visually attractive and pleasing interfaces.\n- Professional Design Element Application: Carefully apply color, typography, spacing, icons, micro-interactions, and animations to enhance user experience without distracting attention.\n- Image Resources: When placeholder or example images are needed, prioritize high-quality, authentic, and relevant photography from `Unsplash` to enhance design authenticity and professionalism, while ensuring images are displayable and stable.\n- Visual Hierarchy \u0026 Guidance: Build clear visual hierarchies to guide user attention to the most important information and actions.\n- Stylistic Unity: Ensure new UI elements or modifications maintain consistency with the application's existing design language and brand identity. If no existing style exists, recommend a clean, modern, and appropriate style.\n\n3. **Responsive \u0026 Adaptive Design**:\n- Cross-Device Coverage: Always ensure designs provide quality, consistent experiences across various devices (desktop, tablet, mobile) and screen sizes.\n- Graceful Degradation \u0026 Progressive Enhancement: Ensure core functionality is available in all environments, with enhanced experiences for modern browsers supporting advanced features.\n- Layout Management: Make appropriate use of the preset `container` class to achieve automatic centering of main content areas and responsive spacing control, ensuring content maintains optimal readability and visual balance across different screen sizes.\n\n4. **Clear \u0026 Effective Interaction \u0026 Feedback**:\n- Immediate Feedback Mechanisms: Provide clear, immediate visual or dynamic feedback for user actions (clicks, hovers, loading, etc.).\n- Distinct States: Ensure different element states (default, hover, active, disabled, loading, error, etc.) are clearly distinguishable.\n- User-Friendly Error Handling: Provide easy-to-understand error messages and, whenever possible, guide users on how to resolve issues or proceed with next steps.\n\n5. **Performance-Aware Design**:\n- Smooth Experience: Optimize images, animations, and interactions to avoid lag and ensure fluidity in the user experience.\n- Perceived Performance: Improve user experience during waiting periods through loading indicators, skeleton screens, and other techniques.\n\u003c/ui_ux_guidelines\u003e\n\n\u003cwriting-text-in-jsx-syntax-problems\u003e\n# JSX Syntax Problems - Critical Issues That Will Cause Build Failures **IMPORTANT**\n\nJSX syntax errors will cause your build to fail, which can be catastrophic for deployment. Always pay careful attention to the following common issues:\n\n## 1. Quote Management in Strings\n\nA common mistake made by the LLM is not handling quotes correctly when writing JSX\n\nExample:\n\nconst message = 'The user's profile';\n\nThis would fail to build because we're not escaping the single quote properly. Instead we should write:\n\nconst message = \"The user's profile\";\n// or\nconst message = 'The user\\'s profile';\n\nMake sure to pay attention to quotes when writing text!\n\n## 2. Special Characters in JSX\n\nHandling characters like `\u003c` and `\u003e` that have special meaning in JSX syntax can cause problems.\n\nExample:\n\n\u003cdiv\u003eIf x \u003c y then z \u003e a\u003c/div\u003e\n\nThis will cause build errors like:\nerror TS1382: Unexpected token. Did you mean `{'\u003e'}` or `\u0026gt;`?\n\nSolutions:\n\nMethod 1: Use curly braces expressions\n\u003cdiv\u003eIf x {'\u003c'} y then z {'\u003e'} a\u003c/div\u003e\n\nMethod 2: Use HTML entities\n\u003cdiv\u003eIf x \u0026lt; y then z \u0026gt; a\u003c/div\u003e\n\nMethod 3: Put content in a string literal\n\u003cdiv\u003e{\"If x \u003c y then z \u003e a\"}\u003c/div\u003e\n\nMethod 4: Strongly recommended for longer content - use string variables\n```jsx\n// For longer content with special characters, strongly recommended approach\nconst complexText = \"When text is lengthy and contains multiple special characters like \u003c \u003e \u0026 \\\" ' etc., storing it in a variable makes it easier to manage and maintain, while avoiding JSX syntax errors.\";\nreturn \u003cdiv\u003e{complexText}\u003c/div\u003e;\n```\n\u003c/writing-text-in-jsx-syntax-problems\u003e\n\n\u003cconcise_communication\u003e\n## Keep Language Concise\n\n- Focus on code generation, avoid redundant explanations\n- Only provide necessary non-technical explanations for modified content\n- Provide solutions directly, avoid over-explaining problems\n- Avoid repeating existing information\n\u003c/concise_communication\u003e ",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": ".devv/STRUCTURE.md",
            "content": "/src\n├── assets/          # Static resources directory, storing static files like images and fonts\n│\n├── components/      # Components directory\n│   ├── ui/         # shadcn/ui components directory, storing all shadcn components\n│   │               # Note: Do not modify the source code of components in this directory\n│   ├── mode-toggle.tsx # Theme toggle button component for switching between light and dark modes\n│   ├── theme-provider.tsx # Theme provider wrapper using next-themes to enable theme functionality\n│   └── [feature]/  # Feature module components directory, organizing custom components by feature modules\n│\n├── hooks/          # Custom Hooks directory\n│   ├── use-mobile.ts # Pre-installed mobile detection Hook from shadcn (import { useIsMobile } from '@/hooks/use-mobile')\n│   └── use-toast.ts  # Toast notification system hook for displaying toast messages (import { useToast } from '@/hooks/use-toast')\n│\n├── lib/            # Utility library directory\n│   └── utils.ts    # Utility functions, including the cn function for merging Tailwind class names\n│\n├── pages/          # Page components directory, based on React Router structure\n│   └── HomePage.tsx # Home page component, serving as the main entry point of the application\n│\n├── App.tsx         # Root component, with React Router routing system configured\n│                   # Add new route configurations in this file\n│\n├── main.tsx        # Entry file, rendering the root component and mounting to the DOM\n│\n├── index.css       # Global styles file, containing Tailwind configuration and custom styles\n│                   # Modify theme colors and design system variables in this file \n│\n├── tailwind.config.js  # Tailwind CSS v3 configuration file\n│                      # Contains theme customization, plugins, and content paths\n│                      # Includes shadcn/ui theme configuration\n│\n├── postcss.config.js  # PostCSS configuration file\n│                      # Configures Tailwind CSS and Autoprefixer plugins\n│\n└── components.json    # shadcn/ui components configuration file\n                      # Defines component paths and styling options ",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "components.json",
            "content": "{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": false,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.js\",\n    \"css\": \"src/index.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "eslint.config.js",
            "content": "import js from '@eslint/js'\nimport globals from 'globals'\nimport reactHooks from 'eslint-plugin-react-hooks'\nimport reactRefresh from 'eslint-plugin-react-refresh'\nimport tseslint from 'typescript-eslint'\n\nexport default tseslint.config(\n  { ignores: ['dist'] },\n  {\n    extends: [js.configs.recommended, ...tseslint.configs.recommended],\n    files: ['**/*.{ts,tsx}'],\n    languageOptions: {\n      ecmaVersion: 2020,\n      globals: globals.browser,\n    },\n    plugins: {\n      'react-hooks': reactHooks,\n      'react-refresh': reactRefresh,\n    },\n    rules: {\n      ...reactHooks.configs.recommended.rules,\n      'react-refresh/only-export-components': [\n        'warn',\n        { allowConstantExport: true },\n      ],\n    },\n  },\n)\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "index.html",
            "content": "\u003c!doctype html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003clink rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003cmeta name=\"description\" content=\"Devv Builder - A modern development platform\" /\u003e\n    \u003ctitle\u003eDevv Builder\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cdiv id=\"root\"\u003e\u003c/div\u003e\n    \u003c!-- IMPORTANT: Never remove the following script reference, otherwise advanced features like element editing will not work --\u003e\n    \u003cscript src=\"https://static.devv.ai/devv-app.js\" type=\"module\"\u003e\u003c/script\u003e\n    \u003cscript type=\"module\" src=\"/src/main.tsx\"\u003e\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "package.json",
            "content": "{\n  \"name\": \"vite-project\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc -b \u0026\u0026 vite build\",\n    \"lint\": \"eslint .\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"@hookform/resolvers\": \"^5.0.1\",\n    \"@radix-ui/react-accordion\": \"^1.2.8\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.11\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.4\",\n    \"@radix-ui/react-avatar\": \"^1.1.7\",\n    \"@radix-ui/react-checkbox\": \"^1.2.3\",\n    \"@radix-ui/react-collapsible\": \"^1.1.8\",\n    \"@radix-ui/react-context-menu\": \"^2.2.12\",\n    \"@radix-ui/react-dialog\": \"^1.1.11\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.12\",\n    \"@radix-ui/react-hover-card\": \"^1.1.11\",\n    \"@radix-ui/react-label\": \"^2.1.4\",\n    \"@radix-ui/react-menubar\": \"^1.1.12\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.10\",\n    \"@radix-ui/react-popover\": \"^1.1.11\",\n    \"@radix-ui/react-progress\": \"^1.1.4\",\n    \"@radix-ui/react-radio-group\": \"^1.3.4\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.6\",\n    \"@radix-ui/react-select\": \"^2.2.2\",\n    \"@radix-ui/react-separator\": \"^1.1.4\",\n    \"@radix-ui/react-slider\": \"^1.3.2\",\n    \"@radix-ui/react-slot\": \"^1.2.0\",\n    \"@radix-ui/react-switch\": \"^1.2.2\",\n    \"@radix-ui/react-tabs\": \"^1.1.9\",\n    \"@radix-ui/react-toast\": \"^1.2.11\",\n    \"@radix-ui/react-toggle\": \"^1.1.6\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.7\",\n    \"@radix-ui/react-tooltip\": \"^1.2.4\",\n    \"@tanstack/react-table\": \"^8.21.3\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"^1.1.1\",\n    \"date-fns\": \"^4.1.0\",\n    \"embla-carousel-react\": \"^8.6.0\",\n    \"input-otp\": \"^1.4.2\",\n    \"lucide-react\": \"^0.503.0\",\n    \"next-themes\": \"^0.4.6\",\n    \"react\": \"^18.2.0\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-hook-form\": \"^7.56.1\",\n    \"react-resizable-panels\": \"^2.1.8\",\n    \"react-router-dom\": \"^6.22.1\",\n    \"recharts\": \"^2.15.3\",\n    \"sonner\": \"^2.0.3\",\n    \"tailwind-merge\": \"^3.2.0\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"tw-animate-css\": \"^1.2.8\",\n    \"vaul\": \"^1.1.2\",\n    \"zod\": \"^3.24.3\"\n  },\n  \"devDependencies\": {\n    \"@eslint/js\": \"^9.22.0\",\n    \"@types/node\": \"^22.14.1\",\n    \"@types/react\": \"^18.2.55\",\n    \"@types/react-dom\": \"^18.2.19\",\n    \"@vitejs/plugin-react\": \"^4.3.4\",\n    \"autoprefixer\": \"^10.4.21\",\n    \"eslint\": \"^9.22.0\",\n    \"eslint-plugin-react-hooks\": \"^5.2.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.19\",\n    \"globals\": \"^16.0.0\",\n    \"postcss\": \"^8.5.3\",\n    \"tailwindcss\": \"3\",\n    \"typescript\": \"~5.7.2\",\n    \"typescript-eslint\": \"^8.26.1\",\n    \"vite\": \"^6.3.1\"\n  }\n}",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "postcss.config.js",
            "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/App.tsx",
            "content": "import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport HomePage from '@/pages/HomePage'\nimport { Toaster } from \"@/components/ui/toaster\"\nimport { ThemeProvider } from '@/components/theme-provider'\n\nfunction App() {\n  return (\n    \u003cThemeProvider\n      attribute=\"class\"\n      defaultTheme=\"system\"\n      enableSystem\n      disableTransitionOnChange\n    \u003e\n      \u003cRouter\u003e\n        \u003cRoutes\u003e\n          \u003cRoute path=\"/\" element={\u003cHomePage /\u003e} /\u003e\n        \u003c/Routes\u003e\n      \u003c/Router\u003e\n      \u003cToaster /\u003e\n    \u003c/ThemeProvider\u003e\n  )\n}\n\nexport default App\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/mode-toggle.tsx",
            "content": "\"use client\"\n\nimport { Moon, Sun } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\n\nimport { Button } from \"@/components/ui/button\"\n\nexport function ModeToggle() {\n  const { theme, setTheme } = useTheme()\n\n  return (\n    \u003cButton\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() =\u003e setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n    \u003e\n      {theme === \"dark\" ? (\n        \u003cSun className=\"h-[1.2rem] w-[1.2rem]\" /\u003e\n      ) : (\n        \u003cMoon className=\"h-[1.2rem] w-[1.2rem]\" /\u003e\n      )}\n      \u003cspan className=\"sr-only\"\u003eToggle theme\u003c/span\u003e\n    \u003c/Button\u003e\n  )\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/theme-provider.tsx",
            "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps\u003ctypeof NextThemesProvider\u003e) {\n  return \u003cNextThemesProvider {...props}\u003e{children}\u003c/NextThemesProvider\u003e\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/accordion.tsx",
            "content": "import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AccordionPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AccordionPrimitive.Item\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  /\u003e\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AccordionPrimitive.Trigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AccordionPrimitive.Trigger\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cAccordionPrimitive.Header className=\"flex\"\u003e\n    \u003cAccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [\u0026[data-state=open]\u003esvg]:rotate-180\",\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n      \u003cChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" /\u003e\n    \u003c/AccordionPrimitive.Trigger\u003e\n  \u003c/AccordionPrimitive.Header\u003e\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AccordionPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AccordionPrimitive.Content\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cAccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  \u003e\n    \u003cdiv className={cn(\"pb-4 pt-0\", className)}\u003e{children}\u003c/div\u003e\n  \u003c/AccordionPrimitive.Content\u003e\n))\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/alert-dialog.tsx",
            "content": "import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  /\u003e\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Content\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPortal\u003e\n    \u003cAlertDialogOverlay /\u003e\n    \u003cAlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/AlertDialogPortal\u003e\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  /\u003e\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Action\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Action\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  /\u003e\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AlertDialogPrimitive.Cancel\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AlertDialogPrimitive.Cancel\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/alert.tsx",
            "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [\u0026\u003esvg+div]:translate-y-[-3px] [\u0026\u003esvg]:absolute [\u0026\u003esvg]:left-4 [\u0026\u003esvg]:top-4 [\u0026\u003esvg]:text-foreground [\u0026\u003esvg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [\u0026\u003esvg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e \u0026 VariantProps\u003ctypeof alertVariants\u003e\n\u003e(({ className, variant, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  /\u003e\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef\u003c\n  HTMLParagraphElement,\n  React.HTMLAttributes\u003cHTMLHeadingElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ch5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  /\u003e\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef\u003c\n  HTMLParagraphElement,\n  React.HTMLAttributes\u003cHTMLParagraphElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\"text-sm [\u0026_p]:leading-relaxed\", className)}\n    {...props}\n  /\u003e\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/aspect-ratio.tsx",
            "content": "import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/avatar.tsx",
            "content": "import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AvatarPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AvatarPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AvatarPrimitive.Image\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AvatarPrimitive.Image\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  /\u003e\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof AvatarPrimitive.Fallback\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof AvatarPrimitive.Fallback\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cAvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/badge.tsx",
            "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes\u003cHTMLDivElement\u003e,\n    VariantProps\u003ctypeof badgeVariants\u003e {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    \u003cdiv className={cn(badgeVariants({ variant }), className)} {...props} /\u003e\n  )\n}\n\nexport { Badge, badgeVariants }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/breadcrumb.tsx",
            "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef\u003c\n  HTMLElement,\n  React.ComponentPropsWithoutRef\u003c\"nav\"\u003e \u0026 {\n    separator?: React.ReactNode\n  }\n\u003e(({ ...props }, ref) =\u003e \u003cnav ref={ref} aria-label=\"breadcrumb\" {...props} /\u003e)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef\u003c\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef\u003c\"ol\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003col\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef\u003c\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef\u003c\"li\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cli\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  /\u003e\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef\u003c\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef\u003c\"a\"\u003e \u0026 {\n    asChild?: boolean\n  }\n\u003e(({ asChild, className, ...props }, ref) =\u003e {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    \u003cComp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    /\u003e\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef\u003c\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef\u003c\"span\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cspan\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  /\u003e\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps\u003c\"li\"\u003e) =\u003e (\n  \u003cli\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[\u0026\u003esvg]:w-3.5 [\u0026\u003esvg]:h-3.5\", className)}\n    {...props}\n  \u003e\n    {children ?? \u003cChevronRight /\u003e}\n  \u003c/li\u003e\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps\u003c\"span\"\u003e) =\u003e (\n  \u003cspan\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  \u003e\n    \u003cMoreHorizontal className=\"h-4 w-4\" /\u003e\n    \u003cspan className=\"sr-only\"\u003eMore\u003c/span\u003e\n  \u003c/span\u003e\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/button.tsx",
            "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [\u0026_svg]:pointer-events-none [\u0026_svg]:size-4 [\u0026_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes\u003cHTMLButtonElement\u003e,\n    VariantProps\u003ctypeof buttonVariants\u003e {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef\u003cHTMLButtonElement, ButtonProps\u003e(\n  ({ className, variant, size, asChild = false, ...props }, ref) =\u003e {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      \u003cComp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      /\u003e\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/calendar.tsx",
            "content": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps\u003ctypeof DayPicker\u003e\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    \u003cDayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [\u0026:has([aria-selected])]:bg-accent [\u0026:has([aria-selected].day-outside)]:bg-accent/50 [\u0026:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[\u0026:has(\u003e.day-range-end)]:rounded-r-md [\u0026:has(\u003e.day-range-start)]:rounded-l-md first:[\u0026:has([aria-selected])]:rounded-l-md last:[\u0026:has([aria-selected])]:rounded-r-md\"\n            : \"[\u0026:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start: \"day-range-start\",\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) =\u003e (\n          \u003cChevronLeft className={cn(\"h-4 w-4\", className)} {...props} /\u003e\n        ),\n        IconRight: ({ className, ...props }) =\u003e (\n          \u003cChevronRight className={cn(\"h-4 w-4\", className)} {...props} /\u003e\n        ),\n      }}\n      {...props}\n    /\u003e\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/card.tsx",
            "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  /\u003e\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  /\u003e\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} /\u003e\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  /\u003e\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/carousel.tsx",
            "content": "import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters\u003ctypeof useEmblaCarousel\u003e\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) =\u003e void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType\u003ctypeof useEmblaCarousel\u003e[0]\n  api: ReturnType\u003ctypeof useEmblaCarousel\u003e[1]\n  scrollPrev: () =\u003e void\n  scrollNext: () =\u003e void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} \u0026 CarouselProps\n\nconst CarouselContext = React.createContext\u003cCarouselContextProps | null\u003e(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a \u003cCarousel /\u003e\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e \u0026 CarouselProps\n\u003e(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) =\u003e {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) =\u003e {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() =\u003e {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() =\u003e {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent\u003cHTMLDivElement\u003e) =\u003e {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() =\u003e {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() =\u003e {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () =\u003e {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      \u003cCarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      \u003e\n        \u003cdiv\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        \u003e\n          {children}\n        \u003c/div\u003e\n      \u003c/CarouselContext.Provider\u003e\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    \u003cdiv ref={carouselRef} className=\"overflow-hidden\"\u003e\n      \u003cdiv\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      /\u003e\n    \u003c/div\u003e\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const { orientation } = useCarousel()\n\n  return (\n    \u003cdiv\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003ctypeof Button\u003e\n\u003e(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) =\u003e {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    \u003cButton\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    \u003e\n      \u003cArrowLeft className=\"h-4 w-4\" /\u003e\n      \u003cspan className=\"sr-only\"\u003ePrevious slide\u003c/span\u003e\n    \u003c/Button\u003e\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003ctypeof Button\u003e\n\u003e(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) =\u003e {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    \u003cButton\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    \u003e\n      \u003cArrowRight className=\"h-4 w-4\" /\u003e\n      \u003cspan className=\"sr-only\"\u003eNext slide\u003c/span\u003e\n    \u003c/Button\u003e\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/chart.tsx",
            "content": "import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } \u0026 (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record\u003ckeyof typeof THEMES, string\u003e }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext\u003cChartContextProps | null\u003e(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a \u003cChartContainer /\u003e\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026 {\n    config: ChartConfig\n    children: React.ComponentProps\u003c\n      typeof RechartsPrimitive.ResponsiveContainer\n    \u003e[\"children\"]\n  }\n\u003e(({ id, className, children, config, ...props }, ref) =\u003e {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    \u003cChartContext.Provider value={{ config }}\u003e\n      \u003cdiv\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [\u0026_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [\u0026_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [\u0026_.recharts-curve.recharts-tooltip-cursor]:stroke-border [\u0026_.recharts-dot[stroke='#fff']]:stroke-transparent [\u0026_.recharts-layer]:outline-none [\u0026_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [\u0026_.recharts-radial-bar-background-sector]:fill-muted [\u0026_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [\u0026_.recharts-reference-line_[stroke='#ccc']]:stroke-border [\u0026_.recharts-sector[stroke='#fff']]:stroke-transparent [\u0026_.recharts-sector]:outline-none [\u0026_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      \u003e\n        \u003cChartStyle id={chartId} config={config} /\u003e\n        \u003cRechartsPrimitive.ResponsiveContainer\u003e\n          {children}\n        \u003c/RechartsPrimitive.ResponsiveContainer\u003e\n      \u003c/div\u003e\n    \u003c/ChartContext.Provider\u003e\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) =\u003e {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) =\u003e config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    \u003cstyle\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) =\u003e `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) =\u003e {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    /\u003e\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003ctypeof RechartsPrimitive.Tooltip\u003e \u0026\n    React.ComponentProps\u003c\"div\"\u003e \u0026 {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n\u003e(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) =\u003e {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() =\u003e {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey \u0026\u0026 typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          \u003cdiv className={cn(\"font-medium\", labelClassName)}\u003e\n            {labelFormatter(value, payload)}\n          \u003c/div\u003e\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return \u003cdiv className={cn(\"font-medium\", labelClassName)}\u003e{value}\u003c/div\u003e\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 \u0026\u0026 indicator !== \"dot\"\n\n    return (\n      \u003cdiv\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      \u003e\n        {!nestLabel ? tooltipLabel : null}\n        \u003cdiv className=\"grid gap-1.5\"\u003e\n          {payload.map((item, index) =\u003e {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              \u003cdiv\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [\u0026\u003esvg]:h-2.5 [\u0026\u003esvg]:w-2.5 [\u0026\u003esvg]:text-muted-foreground\",\n                  indicator === \"dot\" \u0026\u0026 \"items-center\"\n                )}\n              \u003e\n                {formatter \u0026\u0026 item?.value !== undefined \u0026\u0026 item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  \u003c\u003e\n                    {itemConfig?.icon ? (\n                      \u003citemConfig.icon /\u003e\n                    ) : (\n                      !hideIndicator \u0026\u0026 (\n                        \u003cdiv\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel \u0026\u0026 indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        /\u003e\n                      )\n                    )}\n                    \u003cdiv\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    \u003e\n                      \u003cdiv className=\"grid gap-1.5\"\u003e\n                        {nestLabel ? tooltipLabel : null}\n                        \u003cspan className=\"text-muted-foreground\"\u003e\n                          {itemConfig?.label || item.name}\n                        \u003c/span\u003e\n                      \u003c/div\u003e\n                      {item.value \u0026\u0026 (\n                        \u003cspan className=\"font-mono font-medium tabular-nums text-foreground\"\u003e\n                          {item.value.toLocaleString()}\n                        \u003c/span\u003e\n                      )}\n                    \u003c/div\u003e\n                  \u003c/\u003e\n                )}\n              \u003c/div\u003e\n            )\n          })}\n        \u003c/div\u003e\n      \u003c/div\u003e\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026\n    Pick\u003cRechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"\u003e \u0026 {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n\u003e(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) =\u003e {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      \u003cdiv\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      \u003e\n        {payload.map((item) =\u003e {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            \u003cdiv\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [\u0026\u003esvg]:h-3 [\u0026\u003esvg]:w-3 [\u0026\u003esvg]:text-muted-foreground\"\n              )}\n            \u003e\n              {itemConfig?.icon \u0026\u0026 !hideIcon ? (\n                \u003citemConfig.icon /\u003e\n              ) : (\n                \u003cdiv\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                /\u003e\n              )}\n              {itemConfig?.label}\n            \u003c/div\u003e\n          )\n        })}\n      \u003c/div\u003e\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload \u0026\u0026\n    typeof payload.payload === \"object\" \u0026\u0026\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload \u0026\u0026\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload \u0026\u0026\n    key in payloadPayload \u0026\u0026\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/checkbox.tsx",
            "content": "import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CheckboxPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CheckboxPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cCheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    \u003e\n      \u003cCheck className=\"h-4 w-4\" /\u003e\n    \u003c/CheckboxPrimitive.Indicator\u003e\n  \u003c/CheckboxPrimitive.Root\u003e\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/collapsible.tsx",
            "content": "import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/command.tsx",
            "content": "import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) =\u003e {\n  return (\n    \u003cDialog {...props}\u003e\n      \u003cDialogContent className=\"overflow-hidden p-0\"\u003e\n        \u003cCommand className=\"[\u0026_[cmdk-group-heading]]:px-2 [\u0026_[cmdk-group-heading]]:font-medium [\u0026_[cmdk-group-heading]]:text-muted-foreground [\u0026_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [\u0026_[cmdk-group]]:px-2 [\u0026_[cmdk-input-wrapper]_svg]:h-5 [\u0026_[cmdk-input-wrapper]_svg]:w-5 [\u0026_[cmdk-input]]:h-12 [\u0026_[cmdk-item]]:px-2 [\u0026_[cmdk-item]]:py-3 [\u0026_[cmdk-item]_svg]:h-5 [\u0026_[cmdk-item]_svg]:w-5\"\u003e\n          {children}\n        \u003c/Command\u003e\n      \u003c/DialogContent\u003e\n    \u003c/Dialog\u003e\n  )\n}\n\nconst CommandInput = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.Input\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.Input\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\"\u003e\n    \u003cSearch className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" /\u003e\n    \u003cCommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/div\u003e\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.List\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.List\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  /\u003e\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.Empty\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.Empty\u003e\n\u003e((props, ref) =\u003e (\n  \u003cCommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  /\u003e\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.Group\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.Group\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [\u0026_[cmdk-group-heading]]:px-2 [\u0026_[cmdk-group-heading]]:py-1.5 [\u0026_[cmdk-group-heading]]:text-xs [\u0026_[cmdk-group-heading]]:font-medium [\u0026_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.Separator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  /\u003e\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof CommandPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof CommandPrimitive.Item\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cCommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [\u0026_svg]:pointer-events-none [\u0026_svg]:size-4 [\u0026_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLSpanElement\u003e) =\u003e {\n  return (\n    \u003cspan\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/context-menu.tsx",
            "content": "import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.SubTrigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.SubTrigger\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, children, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  \u003e\n    {children}\n    \u003cChevronRight className=\"ml-auto h-4 w-4\" /\u003e\n  \u003c/ContextMenuPrimitive.SubTrigger\u003e\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.SubContent\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.SubContent\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.Content\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.Portal\u003e\n    \u003cContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/ContextMenuPrimitive.Portal\u003e\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.Item\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.CheckboxItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.CheckboxItem\u003e\n\u003e(({ className, children, checked, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cContextMenuPrimitive.ItemIndicator\u003e\n        \u003cCheck className=\"h-4 w-4\" /\u003e\n      \u003c/ContextMenuPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/ContextMenuPrimitive.CheckboxItem\u003e\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.RadioItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.RadioItem\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cContextMenuPrimitive.ItemIndicator\u003e\n        \u003cCircle className=\"h-4 w-4 fill-current\" /\u003e\n      \u003c/ContextMenuPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/ContextMenuPrimitive.RadioItem\u003e\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.Label\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.Label\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ContextMenuPrimitive.Separator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ContextMenuPrimitive.Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  /\u003e\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLSpanElement\u003e) =\u003e {\n  return (\n    \u003cspan\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/dialog.tsx",
            "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Content\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cDialogPortal\u003e\n    \u003cDialogOverlay /\u003e\n    \u003cDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n      \u003cDialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\u003e\n        \u003cX className=\"h-4 w-4\" /\u003e\n        \u003cspan className=\"sr-only\"\u003eClose\u003c/span\u003e\n      \u003c/DialogPrimitive.Close\u003e\n    \u003c/DialogPrimitive.Content\u003e\n  \u003c/DialogPortal\u003e\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DialogPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DialogPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/drawer.tsx",
            "content": "import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps\u003ctypeof DrawerPrimitive.Root\u003e) =\u003e (\n  \u003cDrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  /\u003e\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DrawerPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DrawerPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  /\u003e\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DrawerPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DrawerPrimitive.Content\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cDrawerPortal\u003e\n    \u003cDrawerOverlay /\u003e\n    \u003cDrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    \u003e\n      \u003cdiv className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" /\u003e\n      {children}\n    \u003c/DrawerPrimitive.Content\u003e\n  \u003c/DrawerPortal\u003e\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  /\u003e\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  /\u003e\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DrawerPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DrawerPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DrawerPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DrawerPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/dropdown-menu.tsx",
            "content": "import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.SubTrigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.SubTrigger\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, children, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [\u0026_svg]:pointer-events-none [\u0026_svg]:size-4 [\u0026_svg]:shrink-0\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  \u003e\n    {children}\n    \u003cChevronRight className=\"ml-auto\" /\u003e\n  \u003c/DropdownMenuPrimitive.SubTrigger\u003e\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.SubContent\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.SubContent\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.Content\u003e\n\u003e(({ className, sideOffset = 4, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.Portal\u003e\n    \u003cDropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/DropdownMenuPrimitive.Portal\u003e\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.Item\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.CheckboxItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.CheckboxItem\u003e\n\u003e(({ className, children, checked, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cDropdownMenuPrimitive.ItemIndicator\u003e\n        \u003cCheck className=\"h-4 w-4\" /\u003e\n      \u003c/DropdownMenuPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/DropdownMenuPrimitive.CheckboxItem\u003e\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.RadioItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.RadioItem\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cDropdownMenuPrimitive.ItemIndicator\u003e\n        \u003cCircle className=\"h-2 w-2 fill-current\" /\u003e\n      \u003c/DropdownMenuPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/DropdownMenuPrimitive.RadioItem\u003e\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.Label\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.Label\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof DropdownMenuPrimitive.Separator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof DropdownMenuPrimitive.Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cDropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  /\u003e\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLSpanElement\u003e) =\u003e {\n  return (\n    \u003cspan\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    /\u003e\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/form.tsx",
            "content": "import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue\u003c\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath\u003cTFieldValues\u003e = FieldPath\u003cTFieldValues\u003e\n\u003e = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext\u003cFormFieldContextValue\u003e(\n  {} as FormFieldContextValue\n)\n\nconst FormField = \u003c\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath\u003cTFieldValues\u003e = FieldPath\u003cTFieldValues\u003e\n\u003e({\n  ...props\n}: ControllerProps\u003cTFieldValues, TName\u003e) =\u003e {\n  return (\n    \u003cFormFieldContext.Provider value={{ name: props.name }}\u003e\n      \u003cController {...props} /\u003e\n    \u003c/FormFieldContext.Provider\u003e\n  )\n}\n\nconst useFormField = () =\u003e {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within \u003cFormField\u003e\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext\u003cFormItemContextValue\u003e(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef\u003c\n  HTMLDivElement,\n  React.HTMLAttributes\u003cHTMLDivElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const id = React.useId()\n\n  return (\n    \u003cFormItemContext.Provider value={{ id }}\u003e\n      \u003cdiv ref={ref} className={cn(\"space-y-2\", className)} {...props} /\u003e\n    \u003c/FormItemContext.Provider\u003e\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof LabelPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof LabelPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const { error, formItemId } = useFormField()\n\n  return (\n    \u003cLabel\n      ref={ref}\n      className={cn(error \u0026\u0026 \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    /\u003e\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof Slot\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof Slot\u003e\n\u003e(({ ...props }, ref) =\u003e {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    \u003cSlot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    /\u003e\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef\u003c\n  HTMLParagraphElement,\n  React.HTMLAttributes\u003cHTMLParagraphElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    \u003cp\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    /\u003e\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef\u003c\n  HTMLParagraphElement,\n  React.HTMLAttributes\u003cHTMLParagraphElement\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    \u003cp\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    \u003e\n      {body}\n    \u003c/p\u003e\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/hover-card.tsx",
            "content": "import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof HoverCardPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof HoverCardPrimitive.Content\u003e\n\u003e(({ className, align = \"center\", sideOffset = 4, ...props }, ref) =\u003e (\n  \u003cHoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/input-otp.tsx",
            "content": "import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Minus } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof OTPInput\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof OTPInput\u003e\n\u003e(({ className, containerClassName, ...props }, ref) =\u003e (\n  \u003cOTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  /\u003e\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef\u003c\n  React.ElementRef\u003c\"div\"\u003e,\n  React.ComponentPropsWithoutRef\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv ref={ref} className={cn(\"flex items-center\", className)} {...props} /\u003e\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef\u003c\n  React.ElementRef\u003c\"div\"\u003e,\n  React.ComponentPropsWithoutRef\u003c\"div\"\u003e \u0026 { index: number }\n\u003e(({ index, className, ...props }, ref) =\u003e {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn(\n        \"relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive \u0026\u0026 \"z-10 ring-1 ring-ring\",\n        className\n      )}\n      {...props}\n    \u003e\n      {char}\n      {hasFakeCaret \u0026\u0026 (\n        \u003cdiv className=\"pointer-events-none absolute inset-0 flex items-center justify-center\"\u003e\n          \u003cdiv className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" /\u003e\n        \u003c/div\u003e\n      )}\n    \u003c/div\u003e\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef\u003c\n  React.ElementRef\u003c\"div\"\u003e,\n  React.ComponentPropsWithoutRef\u003c\"div\"\u003e\n\u003e(({ ...props }, ref) =\u003e (\n  \u003cdiv ref={ref} role=\"separator\" {...props}\u003e\n    \u003cMinus /\u003e\n  \u003c/div\u003e\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/input.tsx",
            "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef\u003cHTMLInputElement, React.ComponentProps\u003c\"input\"\u003e\u003e(\n  ({ className, type, ...props }, ref) =\u003e {\n    return (\n      \u003cinput\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      /\u003e\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/label.tsx",
            "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof LabelPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof LabelPrimitive.Root\u003e \u0026\n    VariantProps\u003ctypeof labelVariants\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cLabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  /\u003e\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/menubar.tsx",
            "content": "import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps\u003ctypeof MenubarPrimitive.Menu\u003e) {\n  return \u003cMenubarPrimitive.Menu {...props} /\u003e\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps\u003ctypeof MenubarPrimitive.Group\u003e) {\n  return \u003cMenubarPrimitive.Group {...props} /\u003e\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps\u003ctypeof MenubarPrimitive.Portal\u003e) {\n  return \u003cMenubarPrimitive.Portal {...props} /\u003e\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps\u003ctypeof MenubarPrimitive.RadioGroup\u003e) {\n  return \u003cMenubarPrimitive.RadioGroup {...props} /\u003e\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps\u003ctypeof MenubarPrimitive.Sub\u003e) {\n  return \u003cMenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} /\u003e\n}\n\nconst Menubar = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Trigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Trigger\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.SubTrigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.SubTrigger\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, children, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  \u003e\n    {children}\n    \u003cChevronRight className=\"ml-auto h-4 w-4\" /\u003e\n  \u003c/MenubarPrimitive.SubTrigger\u003e\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.SubContent\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.SubContent\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Content\u003e\n\u003e(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) =\u003e (\n    \u003cMenubarPrimitive.Portal\u003e\n      \u003cMenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      /\u003e\n    \u003c/MenubarPrimitive.Portal\u003e\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Item\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.CheckboxItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.CheckboxItem\u003e\n\u003e(({ className, children, checked, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cMenubarPrimitive.ItemIndicator\u003e\n        \u003cCheck className=\"h-4 w-4\" /\u003e\n      \u003c/MenubarPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/MenubarPrimitive.CheckboxItem\u003e\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.RadioItem\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.RadioItem\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cMenubarPrimitive.ItemIndicator\u003e\n        \u003cCircle className=\"h-4 w-4 fill-current\" /\u003e\n      \u003c/MenubarPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    {children}\n  \u003c/MenubarPrimitive.RadioItem\u003e\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Label\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Label\u003e \u0026 {\n    inset?: boolean\n  }\n\u003e(({ className, inset, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset \u0026\u0026 \"pl-8\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof MenubarPrimitive.Separator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof MenubarPrimitive.Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cMenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  /\u003e\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLSpanElement\u003e) =\u003e {\n  return (\n    \u003cspan\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/navigation-menu.tsx",
            "content": "import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.Root\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cNavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  \u003e\n    {children}\n    \u003cNavigationMenuViewport /\u003e\n  \u003c/NavigationMenuPrimitive.Root\u003e\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.List\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.List\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cNavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.Trigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.Trigger\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cNavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  \u003e\n    {children}{\" \"}\n    \u003cChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    /\u003e\n  \u003c/NavigationMenuPrimitive.Trigger\u003e\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.Content\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cNavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.Viewport\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.Viewport\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv className={cn(\"absolute left-0 top-full flex justify-center\")}\u003e\n    \u003cNavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    /\u003e\n  \u003c/div\u003e\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof NavigationMenuPrimitive.Indicator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof NavigationMenuPrimitive.Indicator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cNavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cdiv className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" /\u003e\n  \u003c/NavigationMenuPrimitive.Indicator\u003e\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/pagination.tsx",
            "content": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps\u003c\"nav\"\u003e) =\u003e (\n  \u003cnav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  /\u003e\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef\u003c\n  HTMLUListElement,\n  React.ComponentProps\u003c\"ul\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  /\u003e\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef\u003c\n  HTMLLIElement,\n  React.ComponentProps\u003c\"li\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cli ref={ref} className={cn(\"\", className)} {...props} /\u003e\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} \u0026 Pick\u003cButtonProps, \"size\"\u003e \u0026\n  React.ComponentProps\u003c\"a\"\u003e\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) =\u003e (\n  \u003ca\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  /\u003e\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps\u003ctypeof PaginationLink\u003e) =\u003e (\n  \u003cPaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  \u003e\n    \u003cChevronLeft className=\"h-4 w-4\" /\u003e\n    \u003cspan\u003ePrevious\u003c/span\u003e\n  \u003c/PaginationLink\u003e\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps\u003ctypeof PaginationLink\u003e) =\u003e (\n  \u003cPaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  \u003e\n    \u003cspan\u003eNext\u003c/span\u003e\n    \u003cChevronRight className=\"h-4 w-4\" /\u003e\n  \u003c/PaginationLink\u003e\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps\u003c\"span\"\u003e) =\u003e (\n  \u003cspan\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  \u003e\n    \u003cMoreHorizontal className=\"h-4 w-4\" /\u003e\n    \u003cspan className=\"sr-only\"\u003eMore pages\u003c/span\u003e\n  \u003c/span\u003e\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationLink,\n  PaginationItem,\n  PaginationPrevious,\n  PaginationNext,\n  PaginationEllipsis,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/popover.tsx",
            "content": "import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof PopoverPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof PopoverPrimitive.Content\u003e\n\u003e(({ className, align = \"center\", sideOffset = 4, ...props }, ref) =\u003e (\n  \u003cPopoverPrimitive.Portal\u003e\n    \u003cPopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/PopoverPrimitive.Portal\u003e\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/progress.tsx",
            "content": "import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ProgressPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ProgressPrimitive.Root\u003e\n\u003e(({ className, value, ...props }, ref) =\u003e (\n  \u003cProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    /\u003e\n  \u003c/ProgressPrimitive.Root\u003e\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/radio-group.tsx",
            "content": "import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof RadioGroupPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof RadioGroupPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cRadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    /\u003e\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof RadioGroupPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof RadioGroupPrimitive.Item\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cRadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    \u003e\n      \u003cRadioGroupPrimitive.Indicator className=\"flex items-center justify-center\"\u003e\n        \u003cCircle className=\"h-3.5 w-3.5 fill-primary\" /\u003e\n      \u003c/RadioGroupPrimitive.Indicator\u003e\n    \u003c/RadioGroupPrimitive.Item\u003e\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/resizable.tsx",
            "content": "import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps\u003ctypeof ResizablePrimitive.PanelGroup\u003e) =\u003e (\n  \u003cResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps\u003ctypeof ResizablePrimitive.PanelResizeHandle\u003e \u0026 {\n  withHandle?: boolean\n}) =\u003e (\n  \u003cResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [\u0026[data-panel-group-direction=vertical]\u003ediv]:rotate-90\",\n      className\n    )}\n    {...props}\n  \u003e\n    {withHandle \u0026\u0026 (\n      \u003cdiv className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\"\u003e\n        \u003cGripVertical className=\"h-2.5 w-2.5\" /\u003e\n      \u003c/div\u003e\n    )}\n  \u003c/ResizablePrimitive.PanelResizeHandle\u003e\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/scroll-area.tsx",
            "content": "import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ScrollAreaPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ScrollAreaPrimitive.Root\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  \u003e\n    \u003cScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\"\u003e\n      {children}\n    \u003c/ScrollAreaPrimitive.Viewport\u003e\n    \u003cScrollBar /\u003e\n    \u003cScrollAreaPrimitive.Corner /\u003e\n  \u003c/ScrollAreaPrimitive.Root\u003e\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ScrollAreaPrimitive.ScrollAreaScrollbar\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ScrollAreaPrimitive.ScrollAreaScrollbar\u003e\n\u003e(({ className, orientation = \"vertical\", ...props }, ref) =\u003e (\n  \u003cScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" \u0026\u0026\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" \u0026\u0026\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" /\u003e\n  \u003c/ScrollAreaPrimitive.ScrollAreaScrollbar\u003e\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/select.tsx",
            "content": "import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.Trigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.Trigger\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [\u0026\u003espan]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  \u003e\n    {children}\n    \u003cSelectPrimitive.Icon asChild\u003e\n      \u003cChevronDown className=\"h-4 w-4 opacity-50\" /\u003e\n    \u003c/SelectPrimitive.Icon\u003e\n  \u003c/SelectPrimitive.Trigger\u003e\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.ScrollUpButton\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.ScrollUpButton\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cChevronUp className=\"h-4 w-4\" /\u003e\n  \u003c/SelectPrimitive.ScrollUpButton\u003e\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.ScrollDownButton\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.ScrollDownButton\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cChevronDown className=\"h-4 w-4\" /\u003e\n  \u003c/SelectPrimitive.ScrollDownButton\u003e\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.Content\u003e\n\u003e(({ className, children, position = \"popper\", ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.Portal\u003e\n    \u003cSelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" \u0026\u0026\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    \u003e\n      \u003cSelectScrollUpButton /\u003e\n      \u003cSelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" \u0026\u0026\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      \u003e\n        {children}\n      \u003c/SelectPrimitive.Viewport\u003e\n      \u003cSelectScrollDownButton /\u003e\n    \u003c/SelectPrimitive.Content\u003e\n  \u003c/SelectPrimitive.Portal\u003e\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.Label\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.Label\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  /\u003e\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.Item\u003e\n\u003e(({ className, children, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cspan className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\"\u003e\n      \u003cSelectPrimitive.ItemIndicator\u003e\n        \u003cCheck className=\"h-4 w-4\" /\u003e\n      \u003c/SelectPrimitive.ItemIndicator\u003e\n    \u003c/span\u003e\n    \u003cSelectPrimitive.ItemText\u003e{children}\u003c/SelectPrimitive.ItemText\u003e\n  \u003c/SelectPrimitive.Item\u003e\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SelectPrimitive.Separator\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SelectPrimitive.Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  /\u003e\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/separator.tsx",
            "content": "import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SeparatorPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SeparatorPrimitive.Root\u003e\n\u003e(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) =\u003e (\n    \u003cSeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/sheet.tsx",
            "content": "import * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SheetPrimitive.Overlay\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SheetPrimitive.Overlay\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  /\u003e\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef\u003ctypeof SheetPrimitive.Content\u003e,\n    VariantProps\u003ctypeof sheetVariants\u003e {}\n\nconst SheetContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SheetPrimitive.Content\u003e,\n  SheetContentProps\n\u003e(({ side = \"right\", className, children, ...props }, ref) =\u003e (\n  \u003cSheetPortal\u003e\n    \u003cSheetOverlay /\u003e\n    \u003cSheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    \u003e\n      \u003cSheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\"\u003e\n        \u003cX className=\"h-4 w-4\" /\u003e\n        \u003cspan className=\"sr-only\"\u003eClose\u003c/span\u003e\n      \u003c/SheetPrimitive.Close\u003e\n      {children}\n    \u003c/SheetPrimitive.Content\u003e\n  \u003c/SheetPortal\u003e\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) =\u003e (\n  \u003cdiv\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SheetPrimitive.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SheetPrimitive.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  /\u003e\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SheetPrimitive.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SheetPrimitive.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/sidebar.tsx",
            "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) =\u003e void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) =\u003e void\n  isMobile: boolean\n  toggleSidebar: () =\u003e void\n}\n\nconst SidebarContext = React.createContext\u003cSidebarContextProps | null\u003e(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026 {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) =\u003e void\n  }\n\u003e(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) =\u003e {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) =\u003e boolean)) =\u003e {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() =\u003e {\n      return isMobile\n        ? setOpenMobile((open) =\u003e !open)\n        : setOpen((open) =\u003e !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() =\u003e {\n      const handleKeyDown = (event: KeyboardEvent) =\u003e {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT \u0026\u0026\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () =\u003e window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo\u003cSidebarContextProps\u003e(\n      () =\u003e ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      \u003cSidebarContext.Provider value={contextValue}\u003e\n        \u003cTooltipProvider delayDuration={0}\u003e\n          \u003cdiv\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          \u003e\n            {children}\n          \u003c/div\u003e\n        \u003c/TooltipProvider\u003e\n      \u003c/SidebarContext.Provider\u003e\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026 {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n\u003e(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) =\u003e {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        \u003cdiv\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        \u003e\n          {children}\n        \u003c/div\u003e\n      )\n    }\n\n    if (isMobile) {\n      return (\n        \u003cSheet open={openMobile} onOpenChange={setOpenMobile} {...props}\u003e\n          \u003cSheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [\u0026\u003ebutton]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          \u003e\n            \u003cSheetHeader className=\"sr-only\"\u003e\n              \u003cSheetTitle\u003eSidebar\u003c/SheetTitle\u003e\n              \u003cSheetDescription\u003eDisplays the mobile sidebar.\u003c/SheetDescription\u003e\n            \u003c/SheetHeader\u003e\n            \u003cdiv className=\"flex h-full w-full flex-col\"\u003e{children}\u003c/div\u003e\n          \u003c/SheetContent\u003e\n        \u003c/Sheet\u003e\n      )\n    }\n\n    return (\n      \u003cdiv\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      \u003e\n        {/* This is what handles the sidebar gap on desktop */}\n        \u003cdiv\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        /\u003e\n        \u003cdiv\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        \u003e\n          \u003cdiv\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          \u003e\n            {children}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof Button\u003e,\n  React.ComponentProps\u003ctypeof Button\u003e\n\u003e(({ className, onClick, ...props }, ref) =\u003e {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    \u003cButton\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) =\u003e {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    \u003e\n      \u003cPanelLeft /\u003e\n      \u003cspan className=\"sr-only\"\u003eToggle Sidebar\u003c/span\u003e\n    \u003c/Button\u003e\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003c\"button\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    \u003cbutton\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_\u0026]:cursor-w-resize [[data-side=right]_\u0026]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_\u0026]:cursor-e-resize [[data-side=right][data-state=collapsed]_\u0026]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_\u0026]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_\u0026]:-left-2\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"main\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cmain\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof Input\u003e,\n  React.ComponentProps\u003ctypeof Input\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cInput\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    /\u003e\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    /\u003e\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof Separator\u003e,\n  React.ComponentProps\u003ctypeof Separator\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cSeparator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    /\u003e\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    /\u003e\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026 { asChild?: boolean }\n\u003e(({ className, asChild = false, ...props }, ref) =\u003e {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    \u003cComp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003c\"button\"\u003e \u0026 { asChild?: boolean }\n\u003e(({ className, asChild = false, ...props }, ref) =\u003e {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    \u003cComp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  /\u003e\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef\u003c\n  HTMLUListElement,\n  React.ComponentProps\u003c\"ul\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  /\u003e\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef\u003c\n  HTMLLIElement,\n  React.ComponentProps\u003c\"li\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cli\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  /\u003e\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [\u0026\u003espan:last-child]:truncate [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003c\"button\"\u003e \u0026 {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps\u003ctypeof TooltipContent\u003e\n  } \u0026 VariantProps\u003ctypeof sidebarMenuButtonVariants\u003e\n\u003e(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) =\u003e {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      \u003cComp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      /\u003e\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      \u003cTooltip\u003e\n        \u003cTooltipTrigger asChild\u003e{button}\u003c/TooltipTrigger\u003e\n        \u003cTooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        /\u003e\n      \u003c/Tooltip\u003e\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef\u003c\n  HTMLButtonElement,\n  React.ComponentProps\u003c\"button\"\u003e \u0026 {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n\u003e(({ className, asChild = false, showOnHover = false, ...props }, ref) =\u003e {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    \u003cComp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover \u0026\u0026\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef\u003c\n  HTMLDivElement,\n  React.ComponentProps\u003c\"div\"\u003e \u0026 {\n    showIcon?: boolean\n  }\n\u003e(({ className, showIcon = false, ...props }, ref) =\u003e {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() =\u003e {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    \u003cdiv\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    \u003e\n      {showIcon \u0026\u0026 (\n        \u003cSkeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        /\u003e\n      )}\n      \u003cSkeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      /\u003e\n    \u003c/div\u003e\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef\u003c\n  HTMLUListElement,\n  React.ComponentProps\u003c\"ul\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef\u003c\n  HTMLLIElement,\n  React.ComponentProps\u003c\"li\"\u003e\n\u003e(({ ...props }, ref) =\u003e \u003cli ref={ref} {...props} /\u003e)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef\u003c\n  HTMLAnchorElement,\n  React.ComponentProps\u003c\"a\"\u003e \u0026 {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n\u003e(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) =\u003e {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    \u003cComp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [\u0026\u003espan:last-child]:truncate [\u0026\u003esvg]:size-4 [\u0026\u003esvg]:shrink-0 [\u0026\u003esvg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" \u0026\u0026 \"text-xs\",\n        size === \"md\" \u0026\u0026 \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    /\u003e\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/skeleton.tsx",
            "content": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes\u003cHTMLDivElement\u003e) {\n  return (\n    \u003cdiv\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    /\u003e\n  )\n}\n\nexport { Skeleton }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/slider.tsx",
            "content": "import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SliderPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SliderPrimitive.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  \u003e\n    \u003cSliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\"\u003e\n      \u003cSliderPrimitive.Range className=\"absolute h-full bg-primary\" /\u003e\n    \u003c/SliderPrimitive.Track\u003e\n    \u003cSliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" /\u003e\n  \u003c/SliderPrimitive.Root\u003e\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/sonner.tsx",
            "content": "import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps\u003ctypeof Sonner\u003e\n\nconst Toaster = ({ ...props }: ToasterProps) =\u003e {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    \u003cSonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    /\u003e\n  )\n}\n\nexport { Toaster }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/switch.tsx",
            "content": "import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof SwitchPrimitives.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof SwitchPrimitives.Root\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cSwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  \u003e\n    \u003cSwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    /\u003e\n  \u003c/SwitchPrimitives.Root\u003e\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/table.tsx",
            "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef\u003c\n  HTMLTableElement,\n  React.HTMLAttributes\u003cHTMLTableElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cdiv className=\"relative w-full overflow-auto\"\u003e\n    \u003ctable\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    /\u003e\n  \u003c/div\u003e\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef\u003c\n  HTMLTableSectionElement,\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cthead ref={ref} className={cn(\"[\u0026_tr]:border-b\", className)} {...props} /\u003e\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef\u003c\n  HTMLTableSectionElement,\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ctbody\n    ref={ref}\n    className={cn(\"[\u0026_tr:last-child]:border-0\", className)}\n    {...props}\n  /\u003e\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef\u003c\n  HTMLTableSectionElement,\n  React.HTMLAttributes\u003cHTMLTableSectionElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ctfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [\u0026\u003etr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef\u003c\n  HTMLTableRowElement,\n  React.HTMLAttributes\u003cHTMLTableRowElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ctr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef\u003c\n  HTMLTableCellElement,\n  React.ThHTMLAttributes\u003cHTMLTableCellElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cth\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [\u0026:has([role=checkbox])]:pr-0 [\u0026\u003e[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef\u003c\n  HTMLTableCellElement,\n  React.TdHTMLAttributes\u003cHTMLTableCellElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ctd\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [\u0026:has([role=checkbox])]:pr-0 [\u0026\u003e[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef\u003c\n  HTMLTableCaptionElement,\n  React.HTMLAttributes\u003cHTMLTableCaptionElement\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003ccaption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  /\u003e\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/tabs.tsx",
            "content": "import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof TabsPrimitive.List\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof TabsPrimitive.List\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cTabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof TabsPrimitive.Trigger\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof TabsPrimitive.Trigger\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cTabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof TabsPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof TabsPrimitive.Content\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cTabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/textarea.tsx",
            "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef\u003c\n  HTMLTextAreaElement,\n  React.ComponentProps\u003c\"textarea\"\u003e\n\u003e(({ className, ...props }, ref) =\u003e {\n  return (\n    \u003ctextarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    /\u003e\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/toast.tsx",
            "content": "import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Viewport\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Viewport\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Root\u003e \u0026\n    VariantProps\u003ctypeof toastVariants\u003e\n\u003e(({ className, variant, ...props }, ref) =\u003e {\n  return (\n    \u003cToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    /\u003e\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Action\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Action\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  /\u003e\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Close\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Close\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  \u003e\n    \u003cX className=\"h-4 w-4\" /\u003e\n  \u003c/ToastPrimitives.Close\u003e\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Title\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Title\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [\u0026+div]:text-xs\", className)}\n    {...props}\n  /\u003e\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToastPrimitives.Description\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToastPrimitives.Description\u003e\n\u003e(({ className, ...props }, ref) =\u003e (\n  \u003cToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  /\u003e\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef\u003ctypeof Toast\u003e\n\ntype ToastActionElement = React.ReactElement\u003ctypeof ToastAction\u003e\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/toaster.tsx",
            "content": "import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    \u003cToastProvider\u003e\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          \u003cToast key={id} {...props}\u003e\n            \u003cdiv className=\"grid gap-1\"\u003e\n              {title \u0026\u0026 \u003cToastTitle\u003e{title}\u003c/ToastTitle\u003e}\n              {description \u0026\u0026 (\n                \u003cToastDescription\u003e{description}\u003c/ToastDescription\u003e\n              )}\n            \u003c/div\u003e\n            {action}\n            \u003cToastClose /\u003e\n          \u003c/Toast\u003e\n        )\n      })}\n      \u003cToastViewport /\u003e\n    \u003c/ToastProvider\u003e\n  )\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/toggle-group.tsx",
            "content": "import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext\u003c\n  VariantProps\u003ctypeof toggleVariants\u003e\n\u003e({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToggleGroupPrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToggleGroupPrimitive.Root\u003e \u0026\n    VariantProps\u003ctypeof toggleVariants\u003e\n\u003e(({ className, variant, size, children, ...props }, ref) =\u003e (\n  \u003cToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  \u003e\n    \u003cToggleGroupContext.Provider value={{ variant, size }}\u003e\n      {children}\n    \u003c/ToggleGroupContext.Provider\u003e\n  \u003c/ToggleGroupPrimitive.Root\u003e\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof ToggleGroupPrimitive.Item\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof ToggleGroupPrimitive.Item\u003e \u0026\n    VariantProps\u003ctypeof toggleVariants\u003e\n\u003e(({ className, children, variant, size, ...props }, ref) =\u003e {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    \u003cToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n    \u003c/ToggleGroupPrimitive.Item\u003e\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/toggle.tsx",
            "content": "import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [\u0026_svg]:pointer-events-none [\u0026_svg]:size-4 [\u0026_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9\",\n        sm: \"h-8 px-1.5 min-w-8\",\n        lg: \"h-10 px-2.5 min-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof TogglePrimitive.Root\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof TogglePrimitive.Root\u003e \u0026\n    VariantProps\u003ctypeof toggleVariants\u003e\n\u003e(({ className, variant, size, ...props }, ref) =\u003e (\n  \u003cTogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  /\u003e\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/components/ui/tooltip.tsx",
            "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef\u003c\n  React.ElementRef\u003ctypeof TooltipPrimitive.Content\u003e,\n  React.ComponentPropsWithoutRef\u003ctypeof TooltipPrimitive.Content\u003e\n\u003e(({ className, sideOffset = 4, ...props }, ref) =\u003e (\n  \u003cTooltipPrimitive.Portal\u003e\n    \u003cTooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    /\u003e\n  \u003c/TooltipPrimitive.Portal\u003e\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/hooks/use-mobile.tsx",
            "content": "/* \n  IMPORTANT: Do not modify this file.\n  This is a core hook for mobile detection and should remain unchanged.\n*/\n\nimport * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState\u003cboolean | undefined\u003e(undefined)\n\n  React.useEffect(() =\u003e {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () =\u003e {\n      setIsMobile(window.innerWidth \u003c MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth \u003c MOBILE_BREAKPOINT)\n    return () =\u003e mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/hooks/use-toast.ts",
            "content": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps \u0026 {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial\u003cToasterToast\u003e\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map\u003cstring, ReturnType\u003ctypeof setTimeout\u003e\u003e()\n\nconst addToRemoveQueue = (toastId: string) =\u003e {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() =\u003e {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State =\u003e {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =\u003e\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) =\u003e {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =\u003e\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) =\u003e t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array\u003c(state: State) =\u003e void\u003e = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) =\u003e {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit\u003cToasterToast, \"id\"\u003e\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =\u003e\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () =\u003e dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) =\u003e {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState\u003cState\u003e(memoryState)\n\n  React.useEffect(() =\u003e {\n    listeners.push(setState)\n    return () =\u003e {\n      const index = listeners.indexOf(setState)\n      if (index \u003e -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) =\u003e dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/index.css",
            "content": "/**\n * **IMPORTANT** Never break the original structure, only add highly customized new styles\n */\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem\n  ;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%}\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%\n  ;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%}\n}\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/lib/utils.ts",
            "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/main.tsx",
            "content": "import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  \u003cStrictMode\u003e\n    \u003cApp /\u003e\n  \u003c/StrictMode\u003e,\n)\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/pages/HomePage.tsx",
            "content": "import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { \n  ArrowRight, \n  Sparkles, \n  TrendingUp, \n  BookOpen, \n  Coffee, \n  Code, \n  Palette, \n  BarChart3, \n  Clock \n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardDescription, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { ModeToggle } from '@/components/mode-toggle';\nimport { cn } from '@/lib/utils';\n\n// Mock data for articles\nconst mockArticles = [\n  {\n    _id: '1',\n    title: '现代Web开发的10个必备工具',\n    excerpt: '探索2025年前端开发者必备的工具和框架，提升开发效率和用户体验。',\n    coverImage: 'https://images.unsplash.com/photo-1498050108023-c5249f4df085',\n    category: 'technology',\n    categoryName: '技术',\n    author: {\n      name: '张明',\n      avatar: 'https://randomuser.me/api/portraits/men/32.jpg'\n    },\n    readTime: '5 分钟',\n    publishedAt: '2025-04-28'\n  },\n  {\n    _id: '2',\n    title: 'UI设计趋势：拥抱玻璃态设计',\n    excerpt: '玻璃拟态设计如何在现代界面中提供深度和复杂性，同时保持优雅和简约。',\n    coverImage: 'https://images.unsplash.com/photo-1558655146-9f40138edfeb',\n    category: 'design',\n    categoryName: '设计',\n    author: {\n      name: '李华',\n      avatar: 'https://randomuser.me/api/portraits/women/44.jpg'\n    },\n    readTime: '7 分钟',\n    publishedAt: '2025-04-26'\n  },\n  {\n    _id: '3',\n    title: '数据驱动型企业的转型之路',\n    excerpt: '如何利用大数据和人工智能技术使企业在数字化时代保持竞争优势。',\n    coverImage: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71',\n    category: 'business',\n    categoryName: '商业',\n    author: {\n      name: '王建国',\n      avatar: 'https://randomuser.me/api/portraits/men/22.jpg'\n    },\n    readTime: '10 分钟',\n    publishedAt: '2025-04-24'\n  },\n  {\n    _id: '4',\n    title: '极简主义：如何活出更充实的生活',\n    excerpt: '探索极简主义生活方式如何帮助我们专注于真正重要的事物，减少生活中的干扰。',\n    coverImage: 'https://images.unsplash.com/photo-1494438639946-1ebd1d20bf85',\n    category: 'lifestyle',\n    categoryName: '生活方式',\n    author: {\n      name: '陈雨',\n      avatar: 'https://randomuser.me/api/portraits/women/29.jpg'\n    },\n    readTime: '6 分钟',\n    publishedAt: '2025-04-22'\n  },\n  {\n    _id: '5',\n    title: '高效工作的时间管理技巧',\n    excerpt: '学习如何优化你的日常工作流程，提高生产力，减少拖延和压力。',\n    coverImage: 'https://images.unsplash.com/photo-1434030216411-0b793f4b4173',\n    category: 'productivity',\n    categoryName: '效率',\n    author: {\n      name: '赵芳',\n      avatar: 'https://randomuser.me/api/portraits/women/59.jpg'\n    },\n    readTime: '8 分钟',\n    publishedAt: '2025-04-20'\n  },\n  {\n    _id: '6',\n    title: 'React 18新特性深度解析',\n    excerpt: 'React 18带来了哪些重要更新？如何利用这些新特性提升应用性能和用户体验。',\n    coverImage: 'https://images.unsplash.com/photo-1633356122102-3fe601e05bd2',\n    category: 'technology',\n    categoryName: '技术',\n    author: {\n      name: '林志',\n      avatar: 'https://randomuser.me/api/portraits/men/64.jpg'\n    },\n    readTime: '12 分钟',\n    publishedAt: '2025-04-18'\n  }\n];\n\n// Categories with icons\nconst categories = [\n  { id: 'technology', name: '技术', icon: \u003cCode className=\"h-5 w-5\" /\u003e },\n  { id: 'design', name: '设计', icon: \u003cPalette className=\"h-5 w-5\" /\u003e },\n  { id: 'business', name: '商业', icon: \u003cBarChart3 className=\"h-5 w-5\" /\u003e },\n  { id: 'lifestyle', name: '生活方式', icon: \u003cCoffee className=\"h-5 w-5\" /\u003e },\n  { id: 'productivity', name: '效率', icon: \u003cClock className=\"h-5 w-5\" /\u003e }\n];\n\nconst HomePage = () =\u003e {\n  const [loading, setLoading] = useState(true);\n  const [articles, setArticles] = useState([]);\n\n  // Simulating data fetching\n  useEffect(() =\u003e {\n    const timer = setTimeout(() =\u003e {\n      setArticles(mockArticles);\n      setLoading(false);\n    }, 800);\n    \n    return () =\u003e clearTimeout(timer);\n  }, []);\n\n  return (\n    \u003cdiv className=\"min-h-screen bg-background\"\u003e\n      {/* Header */}\n      \u003cheader className=\"container mx-auto py-6 px-4 flex justify-between items-center\"\u003e\n        \u003cdiv className=\"flex items-center gap-2\"\u003e\n          \u003cSparkles className=\"w-6 h-6 text-primary\" /\u003e\n          \u003ch2 className=\"text-xl font-bold\"\u003e硬核狗知识库\u003c/h2\u003e\n        \u003c/div\u003e\n        \u003cdiv className=\"flex items-center gap-4\"\u003e\n          \u003cnav className=\"hidden md:flex gap-6\"\u003e\n            \u003cLink to=\"/articles\" className=\"text-sm font-medium hover:text-primary transition-colors\"\u003e文章\u003c/Link\u003e\n            \u003cLink to=\"/categories\" className=\"text-sm font-medium hover:text-primary transition-colors\"\u003e分类\u003c/Link\u003e\n            \u003cLink to=\"/about\" className=\"text-sm font-medium hover:text-primary transition-colors\"\u003e关于\u003c/Link\u003e\n          \u003c/nav\u003e\n          \u003cModeToggle /\u003e\n          \u003cButton size=\"sm\" variant=\"outline\" asChild\u003e\n            \u003cLink to=\"/login\"\u003e登录\u003c/Link\u003e\n          \u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/header\u003e\n\n      \u003cmain\u003e\n        {/* Hero Section - Modern with gradient and blur effects */}\n        \u003csection className=\"relative overflow-hidden py-20 lg:py-32\"\u003e\n          \u003cdiv className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-background to-background dark:from-primary/20 dark:via-background/80 dark:to-background z-0\"\u003e\u003c/div\u003e\n          \n          {/* Animated background elements */}\n          \u003cdiv className=\"absolute inset-0 opacity-30 dark:opacity-20\"\u003e\n            \u003cdiv className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-primary/20 rounded-full blur-3xl animate-pulse\"\u003e\u003c/div\u003e\n            \u003cdiv className=\"absolute bottom-1/3 right-1/3 w-96 h-96 bg-accent/20 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '1s', animationDuration: '7s'}}\u003e\u003c/div\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv className=\"container relative z-10 mx-auto px-4\"\u003e\n            \u003cdiv className=\"max-w-3xl mx-auto text-center\"\u003e\n              \u003cBadge variant=\"outline\" className=\"mb-6 px-4 py-1.5 text-sm font-medium\"\u003e\n                知识无界，分享无限\n              \u003c/Badge\u003e\n              \u003ch1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight mb-6\"\u003e\n                探索\u003cspan className=\"text-primary dark:text-primary/90\"\u003e知识\u003c/span\u003e领域，\n                \u003cspan className=\"bg-clip-text text-transparent bg-gradient-to-r from-primary to-accent dark:from-primary dark:to-primary/70\"\u003e成就更好的自己\u003c/span\u003e\n              \u003c/h1\u003e\n              \u003cp className=\"text-lg md:text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\"\u003e\n                汇聚优质内容，提供深度洞察，帮助你在快速变化的世界中保持成长，拓展视野。\n              \u003c/p\u003e\n              \u003cdiv className=\"flex flex-col sm:flex-row gap-4 justify-center\"\u003e\n                \u003cButton size=\"lg\" className=\"gap-2 text-md px-8 py-6\"\u003e\n                  开始探索\n                  \u003cArrowRight className=\"w-4 h-4\" /\u003e\n                \u003c/Button\u003e\n                \u003cButton size=\"lg\" variant=\"outline\" className=\"gap-2 text-md px-8 py-6\"\u003e\n                  了解会员权益\n                  \u003cSparkles className=\"w-4 h-4\" /\u003e\n                \u003c/Button\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/section\u003e\n\n        {/* Categories - Modern card-based layout */}\n        \u003csection className=\"py-16 bg-muted/50\"\u003e\n          \u003cdiv className=\"container mx-auto px-4\"\u003e\n            \u003cdiv className=\"flex justify-between items-center mb-8\"\u003e\n              \u003ch2 className=\"text-2xl md:text-3xl font-bold\"\u003e探索分类\u003c/h2\u003e\n              \u003cLink to=\"/categories\" className=\"text-primary flex items-center gap-1 text-sm font-medium hover:underline\"\u003e\n                所有分类 \u003cArrowRight className=\"w-4 h-4\" /\u003e\n              \u003c/Link\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\"\u003e\n              {categories.map(category =\u003e (\n                \u003cLink to={`/articles?category=${category.id}`} key={category.id}\u003e\n                  \u003cCard className=\"h-full overflow-hidden hover:shadow-lg transition-all hover:-translate-y-1 border-border/50 hover:border-primary\"\u003e\n                    \u003cCardContent className=\"p-6 flex flex-col items-center justify-center text-center\"\u003e\n                      \u003cdiv className=\"h-12 w-12 rounded-full bg-primary/10 dark:bg-primary/20 flex items-center justify-center mb-4 text-primary\"\u003e\n                        {category.icon}\n                      \u003c/div\u003e\n                      \u003cCardTitle className=\"text-lg mb-2\"\u003e{category.name}\u003c/CardTitle\u003e\n                      \u003cCardDescription className=\"text-sm line-clamp-2\"\u003e\n                        探索{category.name}领域的深度内容\n                      \u003c/CardDescription\u003e\n                    \u003c/CardContent\u003e\n                  \u003c/Card\u003e\n                \u003c/Link\u003e\n              ))}\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/section\u003e\n\n        {/* Latest Articles - Modern asymmetrical grid */}\n        \u003csection className=\"py-16\"\u003e\n          \u003cdiv className=\"container mx-auto px-4\"\u003e\n            \u003cdiv className=\"flex justify-between items-center mb-8\"\u003e\n              \u003ch2 className=\"text-2xl md:text-3xl font-bold\"\u003e最新文章\u003c/h2\u003e\n              \u003cLink to=\"/articles\" className=\"text-primary flex items-center gap-1 text-sm font-medium hover:underline\"\u003e\n                查看全部 \u003cArrowRight className=\"w-4 h-4\" /\u003e\n              \u003c/Link\u003e\n            \u003c/div\u003e\n\n            {loading ? (\n              \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\u003e\n                {[1, 2, 3, 4, 5, 6].map((item) =\u003e (\n                  \u003cCard key={item} className=\"overflow-hidden\"\u003e\n                    \u003cdiv className=\"aspect-[16/9] bg-muted animate-pulse\"\u003e\u003c/div\u003e\n                    \u003cCardContent className=\"p-6\"\u003e\n                      \u003cdiv className=\"h-4 w-2/3 bg-muted animate-pulse rounded mb-2\"\u003e\u003c/div\u003e\n                      \u003cdiv className=\"h-6 w-5/6 bg-muted animate-pulse rounded mb-4\"\u003e\u003c/div\u003e\n                      \u003cdiv className=\"h-4 w-full bg-muted animate-pulse rounded mb-2\"\u003e\u003c/div\u003e\n                      \u003cdiv className=\"h-4 w-4/5 bg-muted animate-pulse rounded\"\u003e\u003c/div\u003e\n                    \u003c/CardContent\u003e\n                  \u003c/Card\u003e\n                ))}\n              \u003c/div\u003e\n            ) : (\n              \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\u003e\n                {articles.map((article, index) =\u003e (\n                  \u003cLink to={`/article/${article._id}`} key={article._id}\u003e\n                    \u003cCard \n                      className={cn(\n                        \"overflow-hidden h-full hover:shadow-lg transition-all hover:-translate-y-1 border-border/50 hover:border-primary\",\n                        index === 0 ? \"md:col-span-2 md:row-span-1\" : \"\"\n                      )}\n                    \u003e\n                      \u003cdiv className=\"aspect-[16/9] relative overflow-hidden\"\u003e\n                        \u003cimg \n                          src={article.coverImage} \n                          alt={article.title}\n                          className=\"object-cover w-full h-full hover:scale-105 transition-transform duration-500\"\n                        /\u003e\n                        \u003cBadge \n                          className=\"absolute top-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-background/95\"\n                          variant=\"outline\"\n                        \u003e\n                          {article.categoryName}\n                        \u003c/Badge\u003e\n                      \u003c/div\u003e\n                      \u003cCardContent className=\"p-6\"\u003e\n                        \u003cdiv className=\"flex items-center gap-2 mb-3\"\u003e\n                          \u003cAvatar className=\"h-6 w-6\"\u003e\n                            \u003cAvatarImage src={article.author.avatar} alt={article.author.name} /\u003e\n                            \u003cAvatarFallback\u003e{article.author.name.charAt(0)}\u003c/AvatarFallback\u003e\n                          \u003c/Avatar\u003e\n                          \u003cspan className=\"text-sm text-muted-foreground\"\u003e{article.author.name}\u003c/span\u003e\n                          \u003cspan className=\"text-muted-foreground\"\u003e·\u003c/span\u003e\n                          \u003cspan className=\"text-sm text-muted-foreground flex items-center gap-1\"\u003e\n                            \u003cBookOpen className=\"h-3 w-3\" /\u003e\n                            {article.readTime}\n                          \u003c/span\u003e\n                        \u003c/div\u003e\n                        \u003cCardTitle className=\"text-lg md:text-xl mb-3 line-clamp-2 hover:text-primary transition-colors\"\u003e\n                          {article.title}\n                        \u003c/CardTitle\u003e\n                        \u003cCardDescription className=\"line-clamp-2\"\u003e{article.excerpt}\u003c/CardDescription\u003e\n                      \u003c/CardContent\u003e\n                    \u003c/Card\u003e\n                  \u003c/Link\u003e\n                ))}\n              \u003c/div\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/section\u003e\n\n        {/* Trending Topics Section */}\n        \u003csection className=\"py-16 bg-muted/50\"\u003e\n          \u003cdiv className=\"container mx-auto px-4\"\u003e\n            \u003cdiv className=\"flex justify-between items-center mb-8\"\u003e\n              \u003ch2 className=\"text-2xl md:text-3xl font-bold\"\u003e热门话题\u003c/h2\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"flex flex-wrap gap-3\"\u003e\n              {['人工智能', '前端开发', '生产力工具', '职场成长', '数据分析', \n                '健康生活', '财务自由', '写作技巧', '持续学习', '环保生活'].map((topic, index) =\u003e (\n                \u003cButton \n                  key={index} \n                  variant={index \u003c 3 ? \"default\" : \"outline\"} \n                  size=\"sm\"\n                  className={index \u003c 3 ? \"gap-1\" : \"\"}\n                \u003e\n                  {index \u003c 3 \u0026\u0026 \u003cTrendingUp className=\"h-3 w-3\" /\u003e}\n                  {topic}\n                \u003c/Button\u003e\n              ))}\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/section\u003e\n\n        {/* Membership CTA - Modern split design */}\n        \u003csection className=\"py-16 relative overflow-hidden\"\u003e\n          \u003cdiv className=\"absolute inset-0 bg-gradient-to-tr from-primary/5 via-background to-background dark:from-primary/10\"\u003e\u003c/div\u003e\n          \u003cdiv className=\"container mx-auto px-4 relative z-10\"\u003e\n            \u003cdiv className=\"grid md:grid-cols-2 gap-10 items-center\"\u003e\n              \u003cdiv className=\"space-y-6\"\u003e\n                \u003cBadge variant=\"outline\" className=\"px-3 py-1\"\u003e会员专享\u003c/Badge\u003e\n                \u003ch2 className=\"text-3xl md:text-4xl font-bold\"\u003e加入我们的知识社区，\u003cbr /\u003e释放你的学习潜能\u003c/h2\u003e\n                \u003cp className=\"text-muted-foreground text-lg\"\u003e\n                  会员可以解锁所有高质量内容，获取专属学习资源，参与线上讨论和活动，结识志同道合的伙伴。\n                \u003c/p\u003e\n                \n                \u003cdiv className=\"pt-4 space-y-4\"\u003e\n                  {[\n                    '无限制访问所有付费文章',\n                    '专属电子书和学习资源下载',\n                    '会员专属社区和讨论群',\n                    '线上活动优先参与权'\n                  ].map((benefit, index) =\u003e (\n                    \u003cdiv key={index} className=\"flex items-start gap-3\"\u003e\n                      \u003cdiv className=\"h-6 w-6 rounded-full bg-primary/10 dark:bg-primary/20 flex items-center justify-center flex-shrink-0\"\u003e\n                        \u003cSparkles className=\"h-3.5 w-3.5 text-primary\" /\u003e\n                      \u003c/div\u003e\n                      \u003cp\u003e{benefit}\u003c/p\u003e\n                    \u003c/div\u003e\n                  ))}\n                \u003c/div\u003e\n                \n                \u003cdiv className=\"pt-4\"\u003e\n                  \u003cButton size=\"lg\" className=\"gap-2\"\u003e\n                    立即加入\n                    \u003cArrowRight className=\"h-4 w-4\" /\u003e\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \n              \u003cdiv className=\"relative h-full min-h-[400px] rounded-2xl overflow-hidden shadow-xl\"\u003e\n                \u003cdiv className=\"absolute inset-0 bg-gradient-to-br from-primary to-accent opacity-90 dark:opacity-80\"\u003e\u003c/div\u003e\n                \u003cdiv className=\"absolute inset-0 mix-blend-overlay opacity-20\" \n                     style={{backgroundImage: 'url(\"https://images.unsplash.com/photo-1516383607781-913a19294fd1?ixlib=rb-4.0.3\")', backgroundSize: 'cover'}}\u003e\u003c/div\u003e\n                \u003cdiv className=\"absolute inset-0 flex items-center justify-center p-10 text-white\"\u003e\n                  \u003cdiv\u003e\n                    \u003cblockquote className=\"text-2xl font-light italic mb-4\"\u003e\n                      \"加入会员是我做过的最有价值的投资之一，每天都能获得新的洞见和成长机会。\"\n                    \u003c/blockquote\u003e\n                    \u003cdiv className=\"flex items-center gap-3\"\u003e\n                      \u003cAvatar className=\"h-10 w-10 border-2 border-white\"\u003e\n                        \u003cAvatarImage src=\"https://randomuser.me/api/portraits/women/65.jpg\" alt=\"Member\" /\u003e\n                        \u003cAvatarFallback\u003eMF\u003c/AvatarFallback\u003e\n                      \u003c/Avatar\u003e\n                      \u003cdiv\u003e\n                        \u003cp className=\"font-medium\"\u003e马菲\u003c/p\u003e\n                        \u003cp className=\"text-sm opacity-80\"\u003e产品设计师 · 会员2年\u003c/p\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/section\u003e\n      \u003c/main\u003e\n\n      {/* Footer */}\n      \u003cfooter className=\"bg-muted py-16\"\u003e\n        \u003cdiv className=\"container mx-auto px-4\"\u003e\n          \u003cdiv className=\"grid grid-cols-2 md:grid-cols-4 gap-8\"\u003e\n            \u003cdiv\u003e\n              \u003ch3 className=\"font-bold mb-4\"\u003e关于我们\u003c/h3\u003e\n              \u003cul className=\"space-y-2\"\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e团队介绍\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e使命与愿景\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e加入我们\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/div\u003e\n            \u003cdiv\u003e\n              \u003ch3 className=\"font-bold mb-4\"\u003e内容分类\u003c/h3\u003e\n              \u003cul className=\"space-y-2\"\u003e\n                {categories.map(category =\u003e (\n                  \u003cli key={category.id}\u003e\n                    \u003ca href={`/articles?category=${category.id}`} className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e\n                      {category.name}\n                    \u003c/a\u003e\n                  \u003c/li\u003e\n                ))}\n              \u003c/ul\u003e\n            \u003c/div\u003e\n            \u003cdiv\u003e\n              \u003ch3 className=\"font-bold mb-4\"\u003e会员服务\u003c/h3\u003e\n              \u003cul className=\"space-y-2\"\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e会员权益\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e常见问题\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e支付方式\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/div\u003e\n            \u003cdiv\u003e\n              \u003ch3 className=\"font-bold mb-4\"\u003e联系我们\u003c/h3\u003e\n              \u003cul className=\"space-y-2\"\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e客户支持\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e商务合作\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#\" className=\"text-sm text-muted-foreground hover:text-foreground\"\u003e意见反馈\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv className=\"border-t border-border/50 mt-10 pt-8 flex flex-col md:flex-row items-center justify-between gap-4\"\u003e\n            \u003cdiv className=\"flex items-center gap-2\"\u003e\n              \u003cSparkles className=\"w-5 h-5 text-primary\" /\u003e\n              \u003cspan className=\"font-bold\"\u003e硬核狗知识库\u003c/span\u003e\n            \u003c/div\u003e\n            \u003cp className=\"text-sm text-muted-foreground\"\u003e© 2025 硬核狗知识库. 保留所有权利.\u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/footer\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default HomePage;",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "src/vite-env.d.ts",
            "content": "/// \u003creference types=\"vite/client\" /\u003e\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "tailwind.config.js",
            "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n\tdarkMode: [\"class\"],\n\tcontent: [\n\t\t\"./index.html\",\n\t\t\"./src/**/*.{js,ts,jsx,tsx}\",\n\t],\n\ttheme: {\n\t\tcontainer: {\n\t\t\tcenter: true,\n\t\t\tpadding: '2rem',\n\t\t\tscreens: {\n\t\t\t\t'2xl': '1400px'\n\t\t\t}\n\t\t},\n\t\textend: {\n\t\t\tborderRadius: {\n\t\t\t\tlg: 'var(--radius)',\n\t\t\t\tmd: 'calc(var(--radius) - 2px)',\n\t\t\t\tsm: 'calc(var(--radius) - 4px)'\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tbackground: 'hsl(var(--background))',\n\t\t\t\tforeground: 'hsl(var(--foreground))',\n\t\t\t\tcard: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\t\t\tforeground: 'hsl(var(--card-foreground))'\n\t\t\t\t},\n\t\t\t\tpopover: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n\t\t\t\t},\n\t\t\t\tprimary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--primary))',\n\t\t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n\t\t\t\t},\n\t\t\t\tsecondary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n\t\t\t\t},\n\t\t\t\tmuted: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n\t\t\t\t},\n\t\t\t\taccent: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n\t\t\t\t},\n\t\t\t\tdestructive: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n\t\t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n\t\t\t\t},\n\t\t\t\tborder: 'hsl(var(--border))',\n\t\t\t\tinput: 'hsl(var(--input))',\n\t\t\t\tring: 'hsl(var(--ring))',\n\t\t\t\tchart: {\n\t\t\t\t\t'1': 'hsl(var(--chart-1))',\n\t\t\t\t\t'2': 'hsl(var(--chart-2))',\n\t\t\t\t\t'3': 'hsl(var(--chart-3))',\n\t\t\t\t\t'4': 'hsl(var(--chart-4))',\n\t\t\t\t\t'5': 'hsl(var(--chart-5))'\n\t\t\t\t},\n\t\t\t\tsidebar: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--sidebar-background))',\n\t\t\t\t\tforeground: 'hsl(var(--sidebar-foreground))',\n\t\t\t\t\tprimary: 'hsl(var(--sidebar-primary))',\n\t\t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n\t\t\t\t\taccent: 'hsl(var(--sidebar-accent))',\n\t\t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',\n\t\t\t\t\tborder: 'hsl(var(--sidebar-border))',\n\t\t\t\t\tring: 'hsl(var(--sidebar-ring))'\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyframes: {\n\t\t\t\t'accordion-down': {\n\t\t\t\t\tfrom: {\n\t\t\t\t\t\theight: '0'\n\t\t\t\t\t},\n\t\t\t\t\tto: {\n\t\t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'accordion-up': {\n\t\t\t\t\tfrom: {\n\t\t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n\t\t\t\t\t},\n\t\t\t\t\tto: {\n\t\t\t\t\t\theight: '0'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n\t\t\t\t'accordion-up': 'accordion-up 0.2s ease-out'\n\t\t\t}\n\t\t}\n\t},\n\tplugins: [require(\"tailwindcss-animate\")],\n}",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "tsconfig.app.json",
            "content": "{\n  \"compilerOptions\": {\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.app.tsbuildinfo\",\n    \"target\": \"ES2020\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"isolatedModules\": true,\n    \"moduleDetection\": \"force\",\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n\n    /* Linting */\n    \"strict\": false,\n    \"noUnusedLocals\": false,\n    \"noUnusedParameters\": false,\n    \"noImplicitAny\": false,\n    \"noFallthroughCasesInSwitch\": false,\n\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"src\"]\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "tsconfig.json",
            "content": "{\n  \"files\": [],\n  \"references\": [\n    { \"path\": \"./tsconfig.app.json\" },\n    { \"path\": \"./tsconfig.node.json\" }\n  ],\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    },\n    \"noImplicitAny\": false,\n    \"noUnusedParameters\": false,\n    \"skipLibCheck\": true,\n    \"allowJs\": true,\n    \"noUnusedLocals\": false,\n    \"strictNullChecks\": false\n  }\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "tsconfig.node.json",
            "content": "{\n  \"compilerOptions\": {\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.node.tsbuildinfo\",\n    \"target\": \"ES2022\",\n    \"lib\": [\"ES2023\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"isolatedModules\": true,\n    \"moduleDetection\": \"force\",\n    \"noEmit\": true,\n\n    /* Linting */\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noUncheckedSideEffectImports\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}\n",
            "createdTime": 1747840084
        },
        {
            "projectId": "emkcwu758v0g",
            "versionId": "",
            "filename": "vite.config.ts",
            "content": "import path from \"path\"\nimport react from \"@vitejs/plugin-react\"\nimport { defineConfig } from \"vite\"\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"./src\"),\n    },\n  },\n})\n",
            "createdTime": 1747840084
        }
    ]
}